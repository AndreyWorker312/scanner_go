version: '3.8'

services:
  # RabbitMQ сервис
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP порт
      - "15672:15672" # Web UI порт
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - scanner-network

  # Backend сервис
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-app
    ports:
      - "8080:8080"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./public:/app/public
    networks:
      - scanner-network
    restart: unless-stopped

  # Nmap сканер
  scanner_nmap:
    build:
      context: ./scanner_nmap
      dockerfile: Dockerfile
    container_name: scanner-nmap
    env_file:
      - ./scanner_nmap/.env
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - scanner-network
    restart: unless-stopped
    privileged: true
    cap_add:
      - NET_RAW
      - NET_ADMIN

  # ARP сканер
  scanner_arp:
    build:
      context: ./scanner_arp
      dockerfile: Dockerfile
    container_name: scanner-arp
    env_file:
      - ./scanner_arp/.env
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - scanner-network
    restart: unless-stopped
    privileged: true
    cap_add:
      - NET_RAW
      - NET_ADMIN

  # ICMP сканер
  scanner_icmp:
    build:
      context: ./scanner_icmp
      dockerfile: Dockerfile
    container_name: scanner-icmp
    env_file:
      - ./scanner_icmp/.env
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - scanner-network
    restart: unless-stopped
    privileged: true
    cap_add:
      - NET_RAW
      - NET_ADMIN


networks:
  scanner-network:
    driver: bridge

volumes:
  rabbitmq_data: